import 0x1.LibraAccount;
import 0x1.Coin1;
import 0x1.Libra;
import 0x1.Signer;

main(account: &signer) {
    let addr: address;
    let old_balance: u64;
    let with_cap: LibraAccount.WithdrawCapability;

    addr = Signer.address_of(copy(account));
    old_balance = LibraAccount.balance<Coin1.Coin1>(copy(addr));

    with_cap = LibraAccount.extract_withdraw_capability(copy(account));
    LibraAccount.pay_from<Coin1.Coin1>(&with_cap, copy(addr), 0, h"", h"");
    LibraAccount.restore_withdraw_capability(move(with_cap));

    assert(LibraAccount.balance<Coin1.Coin1>(copy(addr)) == move(old_balance), 42);

    return;
}

// check: "Keep(ABORTED { code: 519,"
