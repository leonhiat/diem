============ initial translation from Move ================

[variant baseline]
pub fun TestMutRefs::unpack($t0|r: &mut TestMutRefs::R): u64 {
     var $t1|result: u64
     var $t2|tmp#$2: &mut TestMutRefs::R
     var $t3|value: &mut u64
     var $t4: &mut TestMutRefs::R
     var $t5: &mut TestMutRefs::R
     var $t6: &mut u64
     var $t7: &mut u64
     var $t8: u64
     var $t9: u64
     var $t10: &mut u64
     var $t11: u64
  0: $t4 := move($t0)
  1: $t2 := $t4
  2: $t5 := move($t2)
  3: $t6 := borrow_field<TestMutRefs::R>.value($t5)
  4: $t3 := $t6
  5: $t7 := copy($t3)
  6: $t8 := read_ref($t7)
  7: $t1 := $t8
  8: $t9 := 0
  9: $t10 := move($t3)
 10: write_ref($t10, $t9)
 11: $t11 := copy($t1)
 12: return $t11
}


[variant baseline]
pub fun TestMutRefs::unpack_incorrect($t0|r: &mut TestMutRefs::R): u64 {
     var $t1|result: u64
     var $t2|tmp#$2: &mut TestMutRefs::R
     var $t3|value: &mut u64
     var $t4: &mut TestMutRefs::R
     var $t5: &mut TestMutRefs::R
     var $t6: &mut u64
     var $t7: &mut u64
     var $t8: u64
     var $t9: u64
  0: $t4 := move($t0)
  1: $t2 := $t4
  2: $t5 := move($t2)
  3: $t6 := borrow_field<TestMutRefs::R>.value($t5)
  4: $t3 := $t6
  5: $t7 := move($t3)
  6: $t8 := read_ref($t7)
  7: $t1 := $t8
  8: $t9 := copy($t1)
  9: return $t9
}

============ after pipeline `reaching_def` ================

[variant baseline]
pub fun TestMutRefs::unpack($t0|r: TestMutRefs::R): (u64, TestMutRefs::R) {
     var $t1|result: u64
     var $t2|tmp#$2: &mut TestMutRefs::R
     var $t3|value: &mut u64
     var $t4: &mut TestMutRefs::R
     var $t5: &mut TestMutRefs::R
     var $t6: &mut u64
     var $t7: &mut u64
     var $t8: u64
     var $t9: u64
     var $t10: &mut u64
     var $t11: u64
     var $t12: TestMutRefs::R
     var $t13: &mut TestMutRefs::R
  0: $t12 := move($t0)
  1: $t13 := borrow_local($t12)
  2: $t4 := move($t13)
  3: $t2 := $t13
  4: $t5 := move($t13)
  5: $t6 := borrow_field<TestMutRefs::R>.value($t13)
  6: $t3 := $t6
  7: $t7 := copy($t3)
  8: $t8 := read_ref($t3)
  9: $t1 := $t8
 10: $t9 := 0
 11: $t10 := move($t3)
 12: write_ref($t3, $t9)
 13: $t11 := copy($t1)
 14: return ($t1, $t12)
}


[variant baseline]
pub fun TestMutRefs::unpack_incorrect($t0|r: TestMutRefs::R): (u64, TestMutRefs::R) {
     var $t1|result: u64
     var $t2|tmp#$2: &mut TestMutRefs::R
     var $t3|value: &mut u64
     var $t4: &mut TestMutRefs::R
     var $t5: &mut TestMutRefs::R
     var $t6: &mut u64
     var $t7: &mut u64
     var $t8: u64
     var $t9: u64
     var $t10: TestMutRefs::R
     var $t11: &mut TestMutRefs::R
  0: $t10 := move($t0)
  1: $t11 := borrow_local($t10)
  2: $t4 := move($t11)
  3: $t2 := $t11
  4: $t5 := move($t11)
  5: $t6 := borrow_field<TestMutRefs::R>.value($t11)
  6: $t3 := $t6
  7: $t7 := move($t3)
  8: $t8 := read_ref($t3)
  9: $t1 := $t8
 10: $t9 := copy($t1)
 11: return ($t1, $t10)
}
