============ after processor `livevar_analysis` ================

[variant baseline]
pub fun Signer::address_of($t0|s: signer): address {
     var $t1: signer
     var $t2: address
     # live vars: s
  0: $t1 := move($t0)
     # live vars: $t1
  1: trace_local[s]($t1)
     # live vars: $t1
  2: $t2 := Signer::borrow_address($t1)
     # live vars: $t2
  3: trace_return[0]($t2)
     # live vars: $t2
  4: return $t2
}


[variant baseline]
pub fun Signer::borrow_address($t0|s: signer): address {
}


[variant baseline]
pub fun Trafo::dummy_need_signer_use_in_move($t0|account: signer): address {
     var $t1: signer
     var $t2: address
     # live vars: account
  0: $t1 := move($t0)
     # live vars: $t1
  1: trace_local[account]($t1)
     # live vars: $t1
  2: $t2 := Signer::address_of($t1)
     # live vars: $t2
  3: trace_return[0]($t2)
     # live vars: $t2
  4: return $t2
}


[variant baseline]
pub fun Trafo::publish($t0|account: signer, $t1|x: u64) {
     var $t2: signer
     var $t3: u64
     var $t4: Trafo::R
     # live vars: account, x
  0: $t2 := move($t0)
     # live vars: x, $t2
  1: $t3 := move($t1)
     # live vars: $t2, $t3
  2: trace_local[account]($t2)
     # live vars: $t2, $t3
  3: trace_local[x]($t3)
     # live vars: $t2, $t3
  4: $t4 := pack Trafo::R($t3)
     # live vars: $t2, $t4
  5: move_to<Trafo::R>($t4, $t2)
     # live vars:
  6: return ()
}
