============ after processor `eliminate_mut_refs` ================

[variant baseline]
pub fun Trafo::incr_ref($t0|r: u64): u64 {
     var $t1: &mut u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: &mut u64
     var $t6: u64
     var $t7: &mut u64
  0: $t6 := move($t0)
  1: $t7 := borrow_local($t6)
  2: trace_local[r]($t7)
  3: $t1 := copy($t7)
  4: $t2 := read_ref($t1)
  5: $t3 := 1
  6: $t4 := +($t2, $t3)
  7: $t5 := move($t7)
  8: write_ref($t5, $t4)
  9: return $t6
}


[variant baseline]
pub fun Trafo::use_incr_ref($t0|b: bool): Trafo::R {
     var $t1|r1: Trafo::R
     var $t2|r2: Trafo::R
     var $t3|r_ref: &mut Trafo::R
     var $t4|tmp#$4: &mut Trafo::R
     var $t5: u64
     var $t6: Trafo::R
     var $t7: u64
     var $t8: Trafo::R
     var $t9: bool
     var $t10: &mut Trafo::R
     var $t11: &mut Trafo::R
     var $t12: &mut Trafo::R
     var $t13: &mut Trafo::R
     var $t14: &mut u64
     var $t15: Trafo::R
     var $t16: bool
     var $t17: u64
  0: $t16 := move($t0)
  1: trace_local[b]($t16)
  2: $t5 := 1
  3: $t6 := pack Trafo::R($t5)
  4: $t1 := $t6
  5: trace_local[r1]($t1)
  6: $t7 := 2
  7: $t8 := pack Trafo::R($t7)
  8: $t2 := $t8
  9: trace_local[r2]($t2)
 10: $t9 := copy($t16)
 11: if ($t9) goto 14 else goto 12
 12: label L1
 13: goto 19
 14: label L0
 15: $t10 := borrow_local($t1)
 16: $t4 := $t10
 17: trace_local[tmp#$4]($t4)
 18: goto 23
 19: label L2
 20: $t11 := borrow_local($t2)
 21: $t4 := $t11
 22: trace_local[tmp#$4]($t4)
 23: label L3
 24: $t12 := move($t4)
 25: $t3 := $t12
 26: trace_local[r_ref]($t3)
 27: $t13 := move($t3)
 28: $t14 := borrow_field<Trafo::R>.x($t13)
 29: $t17 := read_ref($t14)
 30: $t17 := Trafo::incr_ref($t17)
 31: write_ref($t14, $t17)
 32: $t15 := move($t2)
 33: trace_return[0]($t15)
 34: return $t15
}
