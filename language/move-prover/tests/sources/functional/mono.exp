Move prover returns: exiting with boogie verification errors
error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:71:25 ───
    │
 71 │     spec fun vec_addr { ensures result[0] != 0x1; }
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:71
    =     at tests/sources/functional/mono.move:70: vec_addr
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:70: vec_addr
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:71

error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:73:25 ───
    │
 73 │     spec fun vec_bool { ensures result[0] != true; }
    │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:73
    =     at tests/sources/functional/mono.move:72: vec_bool
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:72: vec_bool
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:73

error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:69:24 ───
    │
 69 │     spec fun vec_int { ensures result[0] != 1; }
    │                        ^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:69
    =     at tests/sources/functional/mono.move:68: vec_int
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:68: vec_int
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:69

error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:77:32 ───
    │
 77 │     spec fun vec_struct_addr { ensures result[0].x != 0x1; }
    │                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:77
    =     at tests/sources/functional/mono.move:76: vec_struct_addr
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:76: vec_struct_addr
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:77

error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:75:31 ───
    │
 75 │     spec fun vec_struct_int { ensures result[0].x != 1; }
    │                               ^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:75
    =     at tests/sources/functional/mono.move:74: vec_struct_int
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:74: vec_struct_int
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:75

error: post-condition does not hold

    ┌── tests/sources/functional/mono.move:82:24 ───
    │
 82 │     spec fun vec_vec { ensures len(result[0]) != 0; }
    │                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mono.move:82
    =     at tests/sources/functional/mono.move:79: vec_vec
    =         x = <redacted>
    =     at tests/sources/functional/mono.move:80: vec_vec
    =     at tests/sources/functional/mono.move:80: vec_vec
    =     at tests/sources/functional/mono.move:80: vec_vec
    =         result = <redacted>
    =     at tests/sources/functional/mono.move:81: vec_vec
    =     at tests/sources/functional/mono.move:82
